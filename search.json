[{"path":"https://ppbds.github.io/tutorial.helpers/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 David Kane Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/addins.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Rstudio Addins","text":"provided four additions RStudio Addins menu: “Tutorial Code Exercise”, “Tutorial Written Exercise (Answer)”, “Tutorial Written Exercise (Answer)” “Format Tutorial Chunk Labels.” first three insert skeleton next exercise tutorial, featuring key component parts. even take guess correct exercise number. “Format Tutorial Chunk Labels” addin useful. Always run testing tutorial. ensures exercises sequentially numbered code chunk names correct unique. can find addins “Addins” tab top Rstudio toolbar. Make sure cursor located point Rmd want insert new exercise.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/addins.html","id":"tutorial-code-exercise","dir":"Articles","previous_headings":"Overview","what":"Tutorial Code Exercise","title":"Rstudio Addins","text":"Create new code exercise skeleton exercise title auto-generated code chunk ids. Section, Exercise part, titled “Plotting”. three code chunks included default: Exercise, Hint Test. need include three, although cases . Exercise chunk location students type answers. Hint chunk displayed students click Hint button. Test chunk include correct answer, can sure work students enter Exercise code chunk. See advice writing good tutorial Code Exercises. First, start correct answer, code want students submit. Place code Test chunk end. test process ensure code work students. Second, copy/paste correct answer Hint chunk middle. replace one key words function arguments argument values .... Third, add actual question top skeleton. instructions cause students enter correct answer Exercise chunk? Fourth, drop knowledge ### end. Exercise opportunity teach. Make use !","code":"### Exercise 7  ```{r plotting-7, exercise = TRUE}  ```  <button onclick = \"transfer_code(this)\">Copy previous code<\/button>  ```{r plotting-7-hint, eval = FALSE}  ```  ```{r plotting-7-test, include = FALSE}  ``` ###"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/addins.html","id":"tutorial-written-exercise-without-and-with-answers","dir":"Articles","previous_headings":"Overview","what":"Tutorial Written Exercise (without and with answers)","title":"Rstudio Addins","text":"create similar exercise structures auto-generated code chunk id Exercise number. difference question_text() options filled differently.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/addins.html","id":"written-exercise-no-answer","dir":"Articles","previous_headings":"Overview > Tutorial Written Exercise (without and with answers)","what":"Written Exercise (no Answer):","title":"Rstudio Addins","text":"“Answer” Exercises usually used confirmation student completed specified task. case, need us supply correct answer. can allow students edit submissions.","code":"### Exercise 9  ```{r plotting-9} question_text(NULL,     answer(NULL, correct = TRUE),     allow_retry = TRUE,     try_again_button = \"Edit Answer\",     incorrect = NULL,     rows = 3) ```  ###"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/addins.html","id":"written-exercise-with-answer","dir":"Articles","previous_headings":"Overview > Tutorial Written Exercise (without and with answers)","what":"Written Exercise (with Answer):","title":"Rstudio Addins","text":"“Answer” Exercises require tutorial author provide (excellent!) answer question. harder looks, especially questions without single “right” answer. also rare opportunity since students usually study supplied answer quite closely. want check answer matches. can’t allow students edit answers questions since might (misuse) option just copy/paste/modify supplied answer. learnr package allow Hints written exercises. add Test chunk, rarely makes sense written exercise. main counter-example question asks students run R command Console copy command result command answer. Even though submitting simple code answer, can make sense test chunk executes R code asking run, just ensure work .","code":"### Exercise 8  ```{r plotting-8} question_text(NULL,     message = \"Place correct answer here.\",     answer(NULL, correct = TRUE),     allow_retry = FALSE,     incorrect = NULL,     rows = 6) ```  ###"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/addins.html","id":"format-tutorial-chunk-labels","dir":"Articles","previous_headings":"Overview","what":"Format Tutorial Chunk Labels","title":"Rstudio Addins","text":"often need add new Exercise middle collection Exercises. , want delete one Exercise middle collection. either scenario, Exercises now mis-numbered. either two Exercise 5’s go straight Exercise 4 Exercise 6. want renumber remaining Exercises duplicates missing numbers. “Format Tutorial Chunk Labels” addin accomplishes renumbering. also , changing code chunk names consistent new Exercise numbers. Finally, ensures code chunk labels follow standard: begin (30 characters ) Section Title, remove special characters, replace spaces dashes, make letters lowercase. Since code chunk labels (derived title Section Exercise resides) hard cutoff 30 characters, try make sure Section titles different somewhere first 30 characters (including spaces). , tutorial run since unique code chunk labels required.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/cloud.html","id":"tutorials-and-rstudio-projects","dir":"Articles","previous_headings":"","what":"Tutorials and RStudio Projects","title":"Using Tutorials with Posit Cloud","text":"tutorials, never leave RStudio Project started tutorial. tutorials require create new RStudio Project. Examples r4ds.tutorials package include “RStudio code,” RStudio Github,” “Quarto.” works fine local computer. Posit Cloud, things trickier. must manually keep track different RStudio Projects working. order start new RStudio Project Posit Cloud, must go back Workspace, click “New Project” upper right, select “New Project Git Repository,” provide URL Git repo. click “OK,” now two RStudio Projects Workspace. two projects completely separate. run separate “containers,” .e., separate computers connection one another. One might think problem. able just move back--forth two RStudio Projects, just local computer. work Posit Cloud time switch away tutorial RStudio Project, Posit Cloud closes tutorial, thereby requiring restart time come back. annoying! solution login Posit Cloud twice, keeping login tab browser. one login, looking tutorial RStudio Project, answering questions go along. login, looking second RStudio Project, usually connected Github repo. work. , two logins just two tabs browser, easy switch back forth. Warning: Posit Cloud (unlike local computer) progress tutorial saved across RStudio Projects , close RStudio Project working tutorial, lose work done tutorial.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/cloud.html","id":"rstudio-project-templates","dir":"Articles","previous_headings":"","what":"RStudio Project Templates","title":"Using Tutorials with Posit Cloud","text":"One problem working RStudio Posit Cloud new RStudio Project “clean,” meaning packages installed RStudio settings may selected previous RStudio Projects disappeared. best way solve create Project Template. idea behind templates want start new RStudio Projects favorite packages already installed, preferred RStudio preferences already selected, . things template, new RStudio Project create start tasks already accomplished.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Instructions for Writing R Tutorials","text":"document describes best way write R tutorials using learnr package. common use case tutorial covers material assigned textbook, r4ds.tutorials package R Data Science (2e) Hadley Wickham, Mine Çetinkaya-Rundel, Garrett Grolemund.. Instructors assign textbook readings students. want students read , perhaps importantly, go associated code, typing confirming . Sadly, students almost never . Fortunately, tutorial.helpers package provides tools ensuring students type assigned code. Imagine shallowest possible learning curve. Almost every student able answer almost every exercise, albeit perhaps help hint. hard questions. fact, really aren’t questions . Instead, instructions: one thing, next, next. Almost exercises feature knowledge drop, bit information, rarely two sentences, provided student answered question. Assume giving student private lesson. ask question. give answer. say next? want teach , given context? building “pit success.” Generally, students don’t assigned reading, least large class. However, complete required work. assigned tutorials. promise: complete tutorials, learn material. simply way .","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set Up","title":"Instructions for Writing R Tutorials","text":"Tutorials live directory within inst/tutorials whichever package working . recommend directory name combination prefix number (indicate week/chapter tutorial associated /order ) name, corresponds id tutorial. Within directory R Markdown file , sometimes, material like images data directory. prefix number determines order tutorials appear Tutorial tab. default, name R Markdown file tutorial.Rmd, name works long file appropriate YAML header. create new tutorial, use File -> New File -> R Markdown.... Choose “Template” option select “Helpers Tutorial” tutorial.helpers package. Follow instructions. id value important. directory tutorial located, leading numbers removed. used name answer file students save end tutorial. Note tutorials must R Markdown documents, meaning suffix .Rmd. can (yet) use Quarto documents tutorials. Fortunately, need works Quarto also works R Markdown. main difference code chunk options appear within {}. Don’t worry detail. Just use provided RStudio Addin functions. setup code chunk top tutorial. must library(learnr) , use tools, library(tutorial.helpers) chunk. template also provides useful settings various options. Warning: must ensure library used tutorial explicitly loaded setup chunk. Almost every tutorial makes use functions tidyverse package, sure load . Unfortunately, nothing test suite captures common error using library X tutorial code forgetting load setup chunk. recommend always including question requires students load library used tutorial, learnr tutorial.helpers. good seveal reasons. First, students always forgetting load libraries. practice helps. Second, load-library question provides good occasion knowledge drop. Third, load-library question include test case code chunk loads library. test pass library loaded us setup chunk. tutorials part R package, ensure tutorial.helpers included Imports library loaded tutorial , least, included Suggests.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"structure","dir":"Articles","previous_headings":"","what":"Structure","title":"Instructions for Writing R Tutorials","text":"beginning every tutorial includes copy-code-chunk info-section code chunks. tutorial divided different topics appear side panels. first topic “Introduction” last “Summary”. Within topics, Introduction Summary, series exercises can include writing code writing text. end tutorial, download-answers code chunk provides students instructions download copy answers. Introduction portion two four sentence main topics covered tutorial. ? students get giving 90 minutes lives? functions/techniques learn? Summary portion two four sentences bring lessons tutorial together student. know now know ? important functions/techniques covered? similar Introduction. made promise learn. kept promise. one two key resources topic tutorial, resources mentioned somewhere tutorial also Summary. Anything typed keyboard belongs `backticks` (“quotation marks”), except package names, always bolded. Function names always include parentheses: read_csv(), read_csv. Example: + sign used connect ggplot() components using ggplot2 library. Ensure first questions always require students load libraries used tutorial. , look libraries load set chunk. (Try many .) , except learnr tutorial.helpers merit exercise requires student type library(package.name). ensures students get practice loading libraries. also provides occasion drop knowledge. Don’t forget libraries load included DESCRIPTION file — tutorial part package — probably Suggests.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"topics","dir":"Articles","previous_headings":"","what":"Topics","title":"Instructions for Writing R Tutorials","text":"Tutorials divided topics appear side panel. create topics, include double hash (##) text show side panel. also called topic title. Use sentence case. line topic title, put three hashes. ensures students see introductory text see first exercise. one topic double hash (##) triple hash (###) next line Summary topic, since exercises follow summary text. topic begins sentence two group exercises trying accomplish. Example: link formatted correctly tutorial knitted. Topic introductions sometimes two parts: introductory text plot replicated portion tutorial. two parts generally separated triple hash. last exercise topic, put triple hash give two sentence summary topic accomplished. topic 20 minute transfer knowledge student. beginning, mentioned purpose. Conclude tying things back original purpose. Often, “purposes” fairly trivial: promised go example scatter plot , fact, . OK! writing poetry. every topic leads salvation. One two high quality links, specifically relevant topic, included/explained either beginning end topic, unless topic short.","code":"## Interacting with sites with `GET()` ###  In order to get data from an API, we use the **httr** package. The package is designed to imitate standard HTTP in R. Read more about HTTP [here](https://www.jmarshall.com/easy/http/).  ### Exercise 1"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises","title":"Instructions for Writing R Tutorials","text":"topic composed series numbered exercises.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"flow","dir":"Articles","previous_headings":"Exercises","what":"Flow","title":"Instructions for Writing R Tutorials","text":"exercise flow requires students hit “Continue” button least . Begin Start sentence two knowledge /question . length Start text longer one two lines, place question code chunk part. Instead, Start includes triple hash, thereby creating Continue button. length text short enough students willing read (two sentences), can include exercise code chunk part. time need triple hash exercise code chunk. expect students read two sentences text time. two sentences, almost always want use triple hash order create Continue button students break. won’t read two sentences without break. Start, come three code chunks: exercise code chunk location students place answers. always includes exercise = TRUE code chunk option. hint code chunk includes hints students. code chunk name hint always exactly one exercise code chunk, except -hint-n attached end. n replaced number hint. Almost always, one hint, suffix -hint-1. always set eval = FALSE hint code chunk since, often, hint legal R code. test code chunk exactly label one exercise code chunk, except -test attached end. always includes include = FALSE code chunk option never want show code results students. Instead, purpose test code chunk ensure correct answer — , code want students enter exercise code chunk — works. three code chunks always followed triple hash. want students pause submitted answers likely consider output submission moving . last part exercise end, main opportunity drop knowledge. See Knowledge Drops extensive discussion. last part topic another knowledge drop. another exercise. just knowledge drop last exercise tries take broader overview. often separated last exercise simple ###. , can’t sentence two. substantive simple “Good job.” Recall 10,000 items want mention. example, topic involved creating scatter plot, last exercise putting final touches scatter plot. knowledge drop something scatter plots general, minor point particular scatter plot student just created.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"question-types","dir":"Articles","previous_headings":"Exercises","what":"Question types","title":"Instructions for Writing R Tutorials","text":"create exercise headers, use three hashes. Make sure number exercises – ### Exercise 1, ### Exercise 2 . two main types questions. First, normal coding questions. Students write code press Run Code button. Second, text questions require students either write prose copy/paste results running specific commands. Prose needed questions like “Explain meaning potential outcomes.” Copy/paste situations arise students instructed something like connect Github edit qmd. confirm students completed questions issue command like list.files() copy/pasting command output. often abbreviate instruction using CP/CR, stands copy paste command result.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"code-questions","dir":"Articles","previous_headings":"Exercises > Question types","what":"Code questions","title":"Instructions for Writing R Tutorials","text":"example code question: First, Start exercise sets stage. sometimes teaches something new, connects previous exercise, provides useful link, whatever. long enough, followed triple hash. , text continues instruction. time, , instruction, telling student, step--step, . Second, instruction requires students write code. Good instructions generate results student presses Run Code. Tutorial answers require smallest incremental number characters, relative last question, students type. one way know learning curve shallow. exercise code chunk requires students type lot characters, split exercise multiple separate exercises. Third, exercise requires copying code prior exercise place Copy previous code button exercise code chunk. Fourth, tutorials simple 95% students can answer 95% questions easily. One way ensure add hint almost every coding question. Hints must always code chunk name exercise chunk hint, “-hint-n” added end. , exercise code chunk named “ex-1”, hint associated exercise named “ex-1-hint-1”. second hint question named “ex-1-hint-2”, . create hint, always use eval = FALSE within parentheses code chunk. hints often include “…” symbols run correct R code. , need tell R run error occur R CMD check. Example: need wrap text long hint hand, inserting carriage returns . R wrap text automatically. Often, hints look like : “…” indicates places student needs insert code, value function name. code hints formatted correctly. Students can see first hint clicking next hint. , make sure last hint one want access , .e., one provides key information. students can see last hint, reason consult earlier hints. rarely provide one hint. Hints allowed coding questions, text questions. Fifth, third code chunk, exercise hint code chunks, test code chunk. Place answer — code want students enter exercise code chunk — test code chunk. Since test code chunk evaluated tutorial knitted (also happens testing), guarantees correct answer work students. Indeed, workflow writing exercise often begins , first, entering code want students provide test code chunk. copy/paste code hint code chunk, replacing functions /arguments ... appropriate. ask question , hope, cause students answer code test code chunk. instances can’t test code want students use. common case code requires web, generally downloading data. case, delete test code chunk. Sixth, separate code chunks end exercise using ### . simple questions result display data, one approach write “see value height row 1 23.” allows students know right track. Never hard-code number. Use R inline calculate , even though can bother. , much common, use end drop knowledge, especially function used answer exercise, one previous exercises topic. Note provide many exercises possible. example, every tutorial features question package must loaded. require students type items like library(tidyverse) even though done many times past. Every exercise another opportunity make learning curve shallow possible drop knowledge. questions better fewer. One way measure shallowness learning curve examine many new characters exercise requires answer. Better three exercises, loads different package, one exercise loads three packages .","code":"### Exercise 2  Start your code with `cces`. Use the pipe operator `|>` to add the  function `filter()`, selecting the  rows where `state` is equal to  \"Massachusetts\". To set something equal to a value in `filter()`  use two equal signs: `==`.  ```{r filter-2, exercise = TRUE} ```  ```{r filter-2-hint-1, eval = FALSE} cces |>    filter(state == \"...\") ```  ```{r filter-2-test, include = FALSE} cces |>    filter(state == \"Massachusetts\") ``` ###   `==` is used because it is **checking** whether the value of the  variable on the left is equal to the value on the left. See  [here](https://stat.ethz.ch/R-manual/R-devel/library/base/html/Comparison.html)  for discussion of other relational operators in R. A single equation symbol, `=`, is used to set something equal to  something else. <button onclick = \"transfer_code(this)\">Copy previous code<\/button> ```{r ex-1-hint-1, eval = FALSE} This is an example hint. Normally sentences like these  would cause an error in R because it is not proper code.  However, since we include eval = FALSE in the r-chunk,  R ignores all errors! ``` ```{r ex-1-hint-2, eval = FALSE} ... |>    filter(year = ...) |>    ...(flights) ```"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"text-questions","dir":"Articles","previous_headings":"Exercises > Question types","what":"Text questions","title":"Instructions for Writing R Tutorials","text":"two types text questions: 1) provide students correct answer, submitted answer, , 2) provide answer. Examples: message argument, provide excellent answer. want allow students check got, less, correct answer. Note set allow_retry FALSE. means , see answer, students can’t modify answer. rows argument decides many rows empty text input . Always specify (approximately) much want students write. Reasonable units : one sentence, two sentences paragraph. Pick one three unless good reason . paragraph questions, mention specific words phrases students include answers. suggested answer includes word “validity,” example, tell students include (define) validity part answer. However, many written questions, don’t provide answer, don’t mind students resubmit. case, use format commonly used “process” questions told students something confirm done copying/pasting result command. tutorial.helpers::show_file() handy function confirming students modified text files instructed. example, telling students edit _quarto.yml file, can check : show_file() provides variety arguments cause return selected lines rather entire file. Keep mind show_file() available students Console default. can either always call tutorial.helpers::show_file(), , always (restart R Session!) student type library(tutorial.helpers) Console hand. Maybe instructions always use double colon, remind students first time tutorial just library(tutorial.helpers). , don’t use double colon , first time used, remind students , see “function found” error, need library(tutorial.helpers) Console.","code":"### Exercise 6  Explain potential outcomes in about two sentences.  ```{r definitions-6} question_text(NULL,     message = \"This is where we place the correct answer. It will appear only after      students have submitted their own answers. Note that we do not need to wrap the      answer text by hand.\",               answer(NULL,             correct = TRUE),     allow_retry = FALSE,     incorrect = NULL,     rows = 6) ``` ### Exercise 7  From the Console, run `list.files()`. CP/CR.  ```{r file-creation-7}   question_text(NULL,     answer(NULL, correct = TRUE),     allow_retry = TRUE,     try_again_button = \"Edit Answer\",     incorrect = NULL,     rows = 3) ``` In the Console, run:  ``` tutorial.helpers::show_file(\"_quarto.yml\") ```  CP/CR."},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"tips","dir":"Articles","previous_headings":"Exercises","what":"Tips","title":"Instructions for Writing R Tutorials","text":"coding exercise always spit something. Interactivity good! Students always look code producing. situations students need make assignments , , result output Run Code button pressed. : little possible. just make pipe? , need create permanent object student work exercise code chunk lasting effects. annoying error prone. can student assignment also, part exercise, print object. works well. Follow coding Style Guide, especially spaces around operators like ” = “. Use one command per line pipes graphics, proper indentation. Indent plotting commands call ggplot(). create object one question assume available subsequent questions. won’t ! question independent every question. live separate R instances. exception (make use ) objects created initial setup chunk entire tutorial available later questions, just way library() commands executed need executed . Tutorials knitted/run directory located. , want read file data/ directory, write: R code chunk, presumably global setup chunk. , try execute line code Command + Return, fail , default, located main directory .package start working tutorials. Using setwd() solve problem. Command + Return now work R session “located” location tutorial run knitted.","code":"x <- read_csv(\"data/myfile.csv\") > getwd() [1] \"/Users/davidkane/Desktop/projects/r4ds.tutorials\" > setwd(\"inst/tutorials/031-data-files/\") > getwd() [1] \"/Users/davidkane/Desktop/projects/r4ds.tutorials/inst/tutorials/031-data-files\" >"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"pipes","dir":"Articles","previous_headings":"Exercises","what":"Pipes","title":"Instructions for Writing R Tutorials","text":"common type code questions involve step--step process building pipe, final output nice looking graphic. want first show graphic create end topic. show start topic last exercise, reminder graphic look like students need scroll way back . put code graph code chunk start topic. Save code object. name object “_p” suffix, “p” stands “plot.” way, put object name code chunk end topic rather copying code. build graphic, line line, series exercises, providing hints along way.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"knowledge-drops","dir":"Articles","previous_headings":"Exercises","what":"Knowledge Drops","title":"Instructions for Writing R Tutorials","text":"difficult part tutorial creation writing “knowledge drops,” snippets wisdom (associated links) used end exercise. generally come two categories: details R functions/packages/websites background information substative data science problem hand. expect easy! Good knowledge drops hard. Make short. Students read sentence two. Rhetorical questions (almost) always work poorly knowledge drops. knowledge drop road sign. Example: “next section explore data .” Don’t waste time telling students expect next, just completed . Teach something real!","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"advice-for-r-details-knowledge-drops","dir":"Articles","previous_headings":"Exercises > Knowledge Drops","what":"Advice for R Details Knowledge Drops","title":"Instructions for Writing R Tutorials","text":"sure knowledge drop? Look help page one functions used topic. Ideally, function used exercise, can one used lines . help page two areas interest: Arguments function, used topic still worth mentioning. good knowledge drop mention argument describe might useful. Related functions. example, use “Useful filter functions” section ?dplyr::filter help page. make good knowledge drops! Another example “See also” section ?arrange help page. can’t possibly use every R function exercise, can least describe knowledge drops. Use high quality links. second edition R Data Science amazing. Link often can. Anything associated Posit (formerly named RStudio) high quality. Examples include sites associated Tidyverse Tidymodels. Avoid links low quality sites like https://rdrr.io/ , https://www.rdocumentation.org/, https://www.datamentor.io/. site uses ads avoided. Links function documentation useful. Indeed, link least documentation every function use. Two categories: Links help pages base function tricky. clear location best use purpose. suggestion use links involving stat.ethz.ch server, home base (think) core R developers. Consider examples cut() print(). Links functions Tidyverse use docs maintained Posit. Consider examples arrange() aes(). One common approach like : Note concisely provide command brings help page link help page . Think back initial discussion 10,000 pieces information want mention point. Among many pages linked help pages core Tidyverse functions, like arrange() aes().","code":"See `?readr::locale` for [details](https://readr.tidyverse.org/articles/locales.html)."},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"advice-for-background-information-knowledge-drops","dir":"Articles","previous_headings":"Exercises > Knowledge Drops","what":"Advice for Background Information Knowledge Drops","title":"Instructions for Writing R Tutorials","text":"second category knowledge drop involves background information current problem. See primer.tutorials package good examples. situation, large amount information, generally textbook, want students read. can’t just copy/paste entire paragraphs book knowledge drops students won’t read paragraphs. best, read two sentences. , need decide 10 important sentences source material, copy/pasting allowed, rewording necessary. , need find portion tutorial 5 exercises row knowledge drops. add two sentences material knowledge drops 5 exercises. knowledge drop need relevant question asked exercise long relevant knowledge drops contained exercises come /.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"addins","dir":"Articles","previous_headings":"Exercises","what":"Addins","title":"Instructions for Writing R Tutorials","text":"tutorial.helpers package provides collection RStudio Addins facilitate creation testing tutorial packages. Read “Rstudio Addins” vignette. Three vignettes create new exercises. fourth, “Format Tutorial Chunk Labels,” renumbers exercises tutorial add remove exercise. also ensures consistency code chunk labels. Highly recommended!","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"inputs","dir":"Articles","previous_headings":"","what":"Inputs","title":"Instructions for Writing R Tutorials","text":"addition tutorial.Rmd, tutorial often use inputs. two common locations storing inputs data images directories level tutorial.Rmd file. file data images available run time. (Note directories must names. Something like my_data work.)","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"data","dir":"Articles","previous_headings":"Inputs","what":"Data","title":"Instructions for Writing R Tutorials","text":"need R object accessible exercise code chunk, create initial global setup code chunk top tutorial. wary code downloads data web. won’t work student internet connection creates tutorial. Instead, save code downloaded data place object RDS file data directory. example “Wrangling Census data tidyverse tools” tutorial tidycensus.tutorials package. first two commands download data save RDS file data directory. code assumes located directory tutorial.Rmd file. run commands , comment don’t want re-run time tutorial created. read_rds() call never commented always need median_age object. designing tutorials use objects like median_age, generally write two exercise code chunks. first student run code used create object . won’t work student connected web , luck, case get sensible error message. second question informs students , behind scenes, assigned result function R object. ask student just print object. don’t assignment , least don’t like questions don’t generate output. use similar approach models can take awhile fit. Example: , code works tutorial directory, higher directory R project . Also, first two commands commented , unless running hand create object. happens data large? See “Arrow” tutorial r4ds.tutorials example. First, generally switch away code exercises use written exercises. Students run required commands copy/paste command/response. Big downloads don’t work well exercise code chunks. Second, create small versions big data global setup chunk. allows us create test code chunks exercises follow. tests run much quickly smaller data. Also, package CRAN, need keep overall size package small possible.","code":"median_age <- get_acs(geography = \"county\",                       variables = \"B01002_001\",                       year = 2020) write_rds(median_age, \"data/median_age.rds\")  median_age <- read_rds(\"data/median_age.rds\") fit_gauss <- brm(formula = biden ~ 1,                 data = poll_data,                 refresh = 0,                 silent = 2,                 seed = 9) write_rds(fit_gauss, \"data/fit_gauss.rds\")  fit_gauss <- read_rds(\"data/fit_gauss.rds\")"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"images","dir":"Articles","previous_headings":"Inputs","what":"Images","title":"Instructions for Writing R Tutorials","text":"add images tutorial, first make directory called images folder contains tutorial.Rmd. Store images tutorial . can work files usual ways. Use include_graphics() add image document. Include code chunk, place want image appear tutorial. include_graphics() part knitr package, need library(knitr) setup code chunk. Note need name code chunks. students complete tutorials using screens different widths, good idea put knitr::opts_chunk$set(.width = '90%') setup code chunk. way, images appear sensible size regardless whether using phone screen big monitor.","code":"```{r} include_graphics(\"images/example.png\") ```"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"files","dir":"Articles","previous_headings":"Inputs","what":"Files","title":"Instructions for Writing R Tutorials","text":"files — commonly text files RDS files — handled similar fashion images. Create directory called data directory tutorial.Rmd, just images. two main uses files data. First, can used “compile time” (tutorial.Rmd knit html) making plots anything else. Second, importantly, available students exercise code blocks “run time” (students tutorial).","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"complex-text","dir":"Articles","previous_headings":"Inputs","what":"Complex text","title":"Instructions for Writing R Tutorials","text":"sometimes want include “complex” text tutorial. common trying teach students use R code chunks strings Rmarkdown wants process certain ways. can sometimes get away placing text environments surrounded three, even four, backticks. works often, always. Comments characters like # especially problematic. also use parsermd package behind scenes. work well one might like. “file” trick solves problem. Create txt file, example.txt, text want appear tutorial. can either leave directory tutorial.Rmd file , probably better, place either data images directory. add code chunk tutorial. file code chunk object loads specified file. code chunk options ensure text echoed evaluated.","code":"```{r file = \"example.txt\", echo = TRUE, eval = FALSE} ```"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"processing-submissions","dir":"Articles","previous_headings":"","what":"Processing submissions","title":"Instructions for Writing R Tutorials","text":"Instructors different needs priorities comes processing student answers. now, provide one function, tutorial.helpers::process_submissions() help . Read help page: ?process_submissions. many arguments options.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"checks","dir":"Articles","previous_headings":"","what":"Checks","title":"Instructions for Writing R Tutorials","text":"simplest way test tutorial.Rmd working hit “Run Document” button. thing running rmarkdown::render() file: assumes located main directory .package, normally . sure catch potential errors, catch many issues, quick. Replace 02-terminal appropriate directory.","code":"rmarkdown::render(\"inst/tutorials/02-terminal/tutorial.Rmd\")"},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"test-before-submitting-a-pr","dir":"Articles","previous_headings":"Checks","what":"Test before submitting a PR","title":"Instructions for Writing R Tutorials","text":"done editing tutorial, need make sure works submit pull request. Click “Install Restart” Build tab. , hit “Start Tutorial” Tutorial tab. mimics experience users . catch common errors, like two code chunks name. (sure less simple test .) full test, means running R CMD check. Go top right window RStudio. Click Build pane hit “Check” button (green check mark). see bunch code tests running. Make sure says “OK” next “testthat”. always run submitting pull request.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"what-to-do-if-r-cmd-check-fails","dir":"Articles","previous_headings":"Checks","what":"What to do if R CMD check fails","title":"Instructions for Writing R Tutorials","text":"Read error message bottom Build pane. want see “R CMD check succeeded.” , problem. error message often provide clue code error occurred. error message detailed enough, go .package.rcheck folder, located directory .package computer. folder created R CMD check process, automatically deleted check process succeeds. process fails, .package.rcheck folder stays around can examine . key file testthat.Rout.fail, tests directory. details went wrong. common source errors something wrong hint code chunks, evaluated just Run Document. Make sure eval = FALSE argument set code chunk hints.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/articles/instructions.html","id":"difficult-bugs","dir":"Articles","previous_headings":"Checks","what":"Difficult bugs","title":"Instructions for Writing R Tutorials","text":"common issue author use package like ggthemes tutorial forget include library(ggthemes) setup code chunk. cause error checking ggthemes actually used tutorial — unless included test code chunk, — tutorial knits without problem. student tries type library(ggthemes) answer exercise gets error package installed. Note R CMD check seem catch cases library() package tutorial package DESCRIPTION. discrepancy cause error Github Actions , , access packages installed part test. careful way Github sloppy deals capitalization changes, especially change name file. example, might first commit file named Rproj.png. Later, decide change file names images lower case. , change name file rproj.png. Commit push. Everything great, right? ! Even Github shows new file name might still file Rproj.png internally, capital “R”. cause errors run checks Github: file ! can see ! tests work local machine. easiest solution delete file (commit change). change name file something else use . R CMD check test tutorials default code chunks exactly Helper Tutorial template. , use template. either “Information” “Download answers” chunks missing, R CMD check return something like “Missing component part file /path///Rmd/file.Rmd”.","code":"Error: Cannot find the file(s): \"images/rproj.png\""},{"path":"https://ppbds.github.io/tutorial.helpers/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Kane. Author, maintainer, copyright holder.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kane D (2024). tutorial.helpers: Helper Functions Creating Tutorials. R package version 0.3.0.9000, https://github.com/PPBDS/tutorial.helpers, https://ppbds.github.io/tutorial.helpers/.","code":"@Manual{,   title = {tutorial.helpers: Helper Functions for Creating Tutorials},   author = {David Kane},   year = {2024},   note = {R package version 0.3.0.9000, https://github.com/PPBDS/tutorial.helpers},   url = {https://ppbds.github.io/tutorial.helpers/}, }"},{"path":[]},{"path":"https://ppbds.github.io/tutorial.helpers/index.html","id":"about-this-package","dir":"","previous_headings":"","what":"About this package","title":"Helper Functions for Creating Tutorials","text":"tutorial.helpers provides functions RStudio Addins help write R tutorials, especially follow advice best way . approach currently used two packages: primer.tutorials r4ds.tutorials.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper Functions for Creating Tutorials","text":"install package CRAN: can install development version GitHub :","code":"install.packages(\"tutorial.helpers\") remotes::install_github(\"PPBDS/tutorial.helpers\")"},{"path":[]},{"path":"https://ppbds.github.io/tutorial.helpers/index.html","id":"download-answers","dir":"","previous_headings":"Useful tools","what":"Download answers","title":"Helper Functions for Creating Tutorials","text":"useful tool download answers trick. tutorial, simply include library(tutorial.helpers) setup R code chunk insert empty code chunk end. ask student provide estimate long tutorial took complete. provide ability download student’s answers three different formats: html, pdf rds. Students submit files instructors, can confirm work completed look patterns student (mis)understandings.","code":"```{r download-answers, child = system.file(\"child_documents/download_answers.Rmd\", package = \"tutorial.helpers\")} ```"},{"path":"https://ppbds.github.io/tutorial.helpers/index.html","id":"testing","dir":"","previous_headings":"Useful tools","what":"Testing","title":"Helper Functions for Creating Tutorials","text":"three exported functions checking tutorials package. See testing vignette details use.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/index.html","id":"recommended-components","dir":"","previous_headings":"Useful tools","what":"Recommended components","title":"Helper Functions for Creating Tutorials","text":"recommend including child document start tutorial: insert questions asking student’s name email address. also recommend including beginning tutorial: allows place button exercise allow students copy code previous exercise. Use: handy students series exercises requires build long pipe, line--line. recommend ending tutorial download-answers child document, discussed .","code":"```{r info-section, child = system.file(\"child_documents/info_section.Rmd\", package = \"tutorial.helpers\")} ``` ```{r copy-code-chunk, child = system.file(\"child_documents/copy_button.Rmd\", package = \"tutorial.helpers\")} ``` <button onclick = \"transfer_code(this)\">Copy previous code<\/button> ```{r download-answers, child = system.file(\"child_documents/download_answers.Rmd\", package = \"tutorial.helpers\")} ```"},{"path":"https://ppbds.github.io/tutorial.helpers/index.html","id":"addins","dir":"","previous_headings":"Useful tools","what":"Addins","title":"Helper Functions for Creating Tutorials","text":"order access addins, load package. See addins vignette details use.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/index.html","id":"getting-started-with-tutorials","dir":"","previous_headings":"Useful tools","what":"Getting Started with Tutorials","title":"Helper Functions for Creating Tutorials","text":"package includes tutorial, “Getting Started Tutorials,” provides introduction tutorials beginning students. require students complete tutorial using tutorial.packages create tutorials.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/check_current_tutorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Check current tutorial — check_current_tutorial","title":"Check current tutorial — check_current_tutorial","text":"add-formatting tutorials. Uses format_tutorial() format tutorial Rmd open current editor","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/check_current_tutorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check current tutorial — check_current_tutorial","text":"","code":"check_current_tutorial()"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/check_tutorial_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Confirm that a tutorial has the recommended components — check_tutorial_defaults","title":"Confirm that a tutorial has the recommended components — check_tutorial_defaults","text":"three code components: use copy-code button, information request, download page. tricky know store \"truth\" components look like. now, truth defined skeleton.Rmd defines template creating new tutorial. tutorials also library(learnr) library(tutorial.helpers), exist skeleton","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/check_tutorial_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confirm that a tutorial has the recommended components — check_tutorial_defaults","text":"","code":"check_tutorial_defaults(tutorial_paths)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/check_tutorial_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confirm that a tutorial has the recommended components — check_tutorial_defaults","text":"tutorial_paths Character vector paths tutorials examined.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/check_tutorial_defaults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confirm that a tutorial has the recommended components — check_tutorial_defaults","text":"return value, called side effects.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/check_tutorial_defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confirm that a tutorial has the recommended components — check_tutorial_defaults","text":"","code":"check_tutorial_defaults(tutorial_paths = return_tutorial_paths(\"tutorial.helpers\")) #> NULL"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_code_chunk_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the code chunk name of a new exercise in a tutorial. — determine_code_chunk_name","title":"Determine the code chunk name of a new exercise in a tutorial. — determine_code_chunk_name","text":"Determine code chunk name new exercise tutorial.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_code_chunk_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the code chunk name of a new exercise in a tutorial. — determine_code_chunk_name","text":"","code":"determine_code_chunk_name(file_path = NULL)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_code_chunk_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the code chunk name of a new exercise in a tutorial. — determine_code_chunk_name","text":"file_path Character string file path tutorial","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_code_chunk_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the code chunk name of a new exercise in a tutorial. — determine_code_chunk_name","text":"section id exercise based section","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_exercise_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the number of the next exercise in a tutorial — determine_exercise_number","title":"Finds the number of the next exercise in a tutorial — determine_exercise_number","text":"Finds number next exercise tutorial","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_exercise_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the number of the next exercise in a tutorial — determine_exercise_number","text":"","code":"determine_exercise_number(file_path = NULL)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_exercise_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the number of the next exercise in a tutorial — determine_exercise_number","text":"file_path Character string file path tutorial","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/determine_exercise_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the number of the next exercise in a tutorial — determine_exercise_number","text":"next exercise number based file argument active document.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/exercise_creation.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a tutorial code exercise or question to the active document — make_exercise","title":"Add a tutorial code exercise or question to the active document — make_exercise","text":"writing tutorials, handy able insert skeleton new code exercise question. bind make_exercise() friends RStudio add-provide functionality. Note function determines correct exercise number use also adds appropriate code chunk names, based exercise number section title.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/exercise_creation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a tutorial code exercise or question to the active document — make_exercise","text":"","code":"make_exercise(type = \"code\", file_path = NULL)  make_no_answer()  make_yes_answer()"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/exercise_creation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a tutorial code exercise or question to the active document — make_exercise","text":"type Character question type. Must one \"code\", \"-answer\", \"yes-answer\". file_path Character path file. NULL, RStudio active document used, default behavior. actual file path used testing.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/exercise_creation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a tutorial code exercise or question to the active document — make_exercise","text":"Exercise skeleton corresponding type argument.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/exercise_creation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a tutorial code exercise or question to the active document — make_exercise","text":"appears RStudio addins must function names Binding value. words, make_exercise(type = '-answer') value. , need two extra functions — make_no_answer() make_yes_answer() —just call make_exercise() passing correct argument.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/format_tutorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-format a tutorial — format_tutorial","title":"Re-format a tutorial — format_tutorial","text":"function formatting tutorial Rmd files. Used check_current_tutorial() re-format currently open tutorial RStudio. renumbers exercises order. ensures chunk labels use numbering, along section title.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/format_tutorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-format a tutorial — format_tutorial","text":"","code":"format_tutorial(file_path)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/format_tutorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-format a tutorial — format_tutorial","text":"file_path Character string.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/format_tutorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-format a tutorial — format_tutorial","text":"Formatted document correct exercise, hint test chunk labels.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/get_submissions_from_learnr_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a list of tutorial answers — get_submissions_from_learnr_session","title":"Return a list of tutorial answers — get_submissions_from_learnr_session","text":"Grabs information learnr session environment, directly session object . Since using session environment, currently (?) way save environment hence test function.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/get_submissions_from_learnr_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a list of tutorial answers — get_submissions_from_learnr_session","text":"","code":"get_submissions_from_learnr_session(sess)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/get_submissions_from_learnr_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a list of tutorial answers — get_submissions_from_learnr_session","text":"sess session object shiny learnr","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/get_submissions_from_learnr_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a list of tutorial answers — get_submissions_from_learnr_session","text":"list includes exercise submissions tutorial","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/knit_tutorials.html","id":null,"dir":"Reference","previous_headings":"","what":"Knit a set of tutorials — knit_tutorials","title":"Knit a set of tutorials — knit_tutorials","text":"define \"testing\" tutorial (successfully) running render() . function renders tutorials provided tutorial_paths. check see rendered file looks OK. tutorial fails render, (assume!) error generated filter testing rig.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/knit_tutorials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Knit a set of tutorials — knit_tutorials","text":"","code":"knit_tutorials(tutorial_paths)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/knit_tutorials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Knit a set of tutorials — knit_tutorials","text":"tutorial_paths Character vector paths tutorials knitted.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/knit_tutorials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Knit a set of tutorials — knit_tutorials","text":"return value, called side effects.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/knit_tutorials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Knit a set of tutorials — knit_tutorials","text":"","code":"knit_tutorials(tutorial_paths = return_tutorial_paths(\"tutorial.helpers\")) #>  #>  #> processing file: tutorial.Rmd #> 1/31                      #> 2/31 [setup]              #> 3/31                      #> 4/31 [copy-code-chunk]    #>  #>  #> processing file: /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/tutorial.helpers/child_documents/copy_button.Rmd #> 1/3 [change-code]       #> 2/3                     #> 3/3 [observe-transfers] #> 5/31                      #> 6/31 [info-section]       #>  #>  #> processing file: /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/tutorial.helpers/child_documents/info_section.Rmd #> 1/6         #> 2/6 [name]  #> 3/6         #> 4/6 [email] #> 5/6         #> 6/6 [ID]    #> 7/31                      #> 8/31 [exercises-1]        #> 9/31                      #> 10/31 [exercises-1-hint-1] #> 11/31                      #> 12/31 [exercises-2]        #> 13/31                      #> 14/31 [exercises-2-hint-1] #> 15/31                      #> 16/31 [exercises-3]        #> 17/31                      #> 18/31 [exercises-3-hint-1] #> 19/31                      #> 20/31 [unnamed-chunk-1]    #> 21/31                      #> 22/31 [exercises-5]        #> 23/31                      #> 24/31 [exercises-6]        #> 25/31                      #> 26/31 [exercises-7]        #> 27/31                      #> 28/31 [exercises-8]        #> 29/31                      #> 30/31 [download-answers]   #>  #>  #> processing file: /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/tutorial.helpers/child_documents/download_answers.Rmd #> 1/6                    #> 2/6 [minutes]          #> 3/6                    #> 4/6 [unnamed-chunk-21] #> 5/6                    #> 6/6 [unnamed-chunk-22] #> 31/31                      #> output file: /tmp/RtmpWpt8aA/tutorial.knit.md #> /opt/hostedtoolcache/pandoc/3.1.11/x64/pandoc +RTS -K512m -RTS /tmp/RtmpWpt8aA/tutorial.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output /tmp/RtmpWpt8aA/tutorial.html --lua-filter /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/rmarkdown/rmarkdown/lua/latex-div.lua --variable bs3=TRUE --standalone --section-divs --template /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --section-divs --reference-location=section --template /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/rmarkdown/templates/tutorial/resources/tutorial-format.htm --no-highlight --variable highlightjs=1 --variable progressive=true --variable allow-skip=true --variable learnr-version=0.11.5 --id-prefix section- --variable theme=cerulean --mathjax --variable 'mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' --include-in-header /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/rmarkdown/rmd/h/shiny-header.html  #>  #> Output created: /tmp/RtmpWpt8aA/tutorial.html #> -- Skip: Rendering /home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/tutorial.helpers/tutorials/getting-started/tutorial.Rmd -- #> Reason: empty test #>  #> NULL"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/process_submissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Submissions — process_submissions","title":"Process Submissions — process_submissions","text":"function processes submissions directory containing HTML/XML files. extracts tables files, filters based pattern key variables, returns either summary tibble combined tibble data.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/process_submissions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Submissions — process_submissions","text":"","code":"process_submissions(   path,   pattern = \".\",   return_value = \"Summary\",   key_vars = NULL,   verbose = 0,   keep_file_name = NULL )"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/process_submissions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Submissions — process_submissions","text":"path path directory containing HTML/XML files. pattern pattern match file names (default: \".\"). return_value type value return. Allowed values \"Summary\" (default) \"\". key_vars character vector key variables extract \"id\" column (default: NULL). verbose integer specifying verbosity level. 0: messages, 1: file count messages, 2: detailed messages files, 3: detailed messages including file problems (default: 0). keep_file_name Specifies whether keep file name summary tibble. Allowed values NULL (default), \"\" (keep entire file name), \"Space\" (keep first space), \"Underscore\" (keep first underscore). used return_value \"Summary\".","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/process_submissions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Submissions — process_submissions","text":"return_value \"Summary\", returns tibble one row file, columns corresponding key_vars, additional \"answers\" column indicating number rows tibble. return_value \"\", returns tibble data combined files.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/process_submissions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Submissions — process_submissions","text":"","code":"if (FALSE) { # \\dontrun{ # Process submissions with default settings process_submissions(\"path/to/directory\")  # Process submissions with a specific pattern and key variables process_submissions(\"path/to/directory\", pattern = \"^submission\", key_vars = c(\"name\", \"email\"))  # Process submissions and return all data process_submissions(\"path/to/directory\", return_value = \"All\")  # Process submissions with verbose output (level 3) process_submissions(\"path/to/directory\", verbose = 3)  # Process submissions and keep the entire file name in the summary tibble process_submissions(\"path/to/directory\", return_value = \"Summary\", keep_file_name = \"All\") } # }"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/return_tutorial_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Return all the paths to the tutorials in a package — return_tutorial_paths","title":"Return all the paths to the tutorials in a package — return_tutorial_paths","text":"Takes package name returns character vector paths tutorials installed package. Assumes every Rmd file inst/tutorials/*/ tutorial, true.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/return_tutorial_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return all the paths to the tutorials in a package — return_tutorial_paths","text":"","code":"return_tutorial_paths(package)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/return_tutorial_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return all the paths to the tutorials in a package — return_tutorial_paths","text":"package Character vector package name tested.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/return_tutorial_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return all the paths to the tutorials in a package — return_tutorial_paths","text":"Character vector full paths installed tutorials package.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/return_tutorial_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return all the paths to the tutorials in a package — return_tutorial_paths","text":"","code":"return_tutorial_paths('learnr') #>  [1] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/ex-data-basics/ex-data-basics.Rmd\"             #>  [2] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/ex-data-filter/ex-data-filter.Rmd\"             #>  [3] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/ex-data-mutate/ex-data-mutate.Rmd\"             #>  [4] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/ex-data-summarise/ex-data-manip-summarise.Rmd\" #>  [5] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/ex-setup-r/ex-setup-r.Rmd\"                     #>  [6] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/hello/hello.Rmd\"                               #>  [7] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/polyglot/polyglot.Rmd\"                         #>  [8] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/quiz_question/quiz_question.Rmd\"               #>  [9] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/setup-chunks/setup-chunks.Rmd\"                 #> [10] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/slidy/slidy.Rmd\"                               #> [11] \"/home/runner/.cache/R/renv/library/tutorial.helpers-cdd4ef10/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu/learnr/tutorials/sql-exercise/sql-exercise.Rmd\""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/set_binary_only_in_r_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Set pkgType to binary in .Rprofile — set_binary_only_in_r_profile","title":"Set pkgType to binary in .Rprofile — set_binary_only_in_r_profile","text":"functions sets pkgType global option \"binary\" .Rprofile. New R users, especially Windows, never install source. fails often, confusingly. also sets value R session. , need either restart R source .Rprofile hand. can examine .Rprofile confirm change usethis::edit_r_profile()","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/set_binary_only_in_r_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set pkgType to binary in .Rprofile — set_binary_only_in_r_profile","text":"","code":"set_binary_only_in_r_profile()"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/set_binary_only_in_r_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set pkgType to binary in .Rprofile — set_binary_only_in_r_profile","text":"return value, called side effects.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/set_rstudio_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Select smart setting for RStudio — set_rstudio_settings","title":"Select smart setting for RStudio — set_rstudio_settings","text":"function changes RStudio settings order make learning easier new users. settings stored : ~/.config/rstudio/rstudio-prefs.json. important changes save_workspace \"never\", load_workspace FALSE, \"insert_native_pipe_operator\" TRUE. changes good user, new old. also change rmd_viewer_type \"pane\", show_hidden_files TRUE, rmd_chunk_output_inline FALSE, source_with_echo TRUE, packages_pane_enabled FALSE. settings make RStudio less confusing new users. rmd_viewer_type setting especially useful students copy/pasting Console/Terminal tutorial. last two changes setting rainbow_parentheses syntax_color_console TRUE. think settings make coding errors less likely.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/set_rstudio_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select smart setting for RStudio — set_rstudio_settings","text":"","code":"set_rstudio_settings(set.binary = TRUE)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/set_rstudio_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select smart setting for RStudio — set_rstudio_settings","text":"set.binary Logical, set TRUE, indicates whether set_binary_only_in_r_profile() run end.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/set_rstudio_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select smart setting for RStudio — set_rstudio_settings","text":"return value, called side effects.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/show_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the contents of a text file that match a pattern — show_file","title":"Display the contents of a text file that match a pattern — show_file","text":"function reads contents text file either prints specified range rows match given regular expression pattern prints code lines within R code chunks. start negative number, prints last abs(start) lines, ignoring missing lines end file.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/show_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the contents of a text file that match a pattern — show_file","text":"","code":"show_file(path, start = 1, end = NULL, pattern = NULL, chunk = \"None\")"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/show_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the contents of a text file that match a pattern — show_file","text":"path character vector representing path text file. start integer specifying starting row number (inclusive) consider. Default 1. negative, represents number lines print end file. end integer specifying ending row number (inclusive) consider. Default last row. pattern regular expression pattern match row. Default NULL (pattern matching). chunk character string indicating whether print code lines within R code chunks. Possible values \"None\" (default), \"\" (print code chunks), \"Last\" (print last code chunk).","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/show_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the contents of a text file that match a pattern — show_file","text":"function prints contents specified range rows match pattern (provided) code lines within R code chunks (chunk TRUE) console. rows match pattern, nothing printed. start negative, function prints last abs(start) lines, ignoring missing lines end file.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/show_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the contents of a text file that match a pattern — show_file","text":"","code":"if (FALSE) { # \\dontrun{ # Display all rows of a text file show_file(\"path/to/your/file.txt\")  # Display rows 5 to 10 of a text file show_file(\"path/to/your/file.txt\", start = 5, end = 10)  # Display all rows of a text file that contain the word \"example\" show_file(\"path/to/your/file.txt\", pattern = \"example\")  # Print code lines within R code chunks show_file(\"path/to/your/file.txt\", chunk = TRUE)  # Display the last 5 lines of a text file, ignoring missing lines at the end show_file(\"path/to/your/file.txt\", start = -5) } # }"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/submission_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Tutorial submission functions — submission_server","title":"Tutorial submission functions — submission_server","text":"following function modified Colin Rundel's learnrhash package, available https://github.com/rundel/learnrhash. Note including functions learnr Rmd document necessary server function, submission_server(), included R chunk context=\"server\".","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/submission_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tutorial submission functions — submission_server","text":"","code":"submission_server()  submission_ui"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/submission_functions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tutorial submission functions — submission_server","text":"object class shiny.tag length 3.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/submission_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tutorial submission functions — submission_server","text":"return value, called side effects. object class shiny.tag.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/submission_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tutorial submission functions — submission_server","text":"","code":"if(interactive()){   submission_server() }  if(interactive()){   submision_ui }"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/write_answers.html","id":null,"dir":"Reference","previous_headings":"","what":"Write tutorial answers to file — write_answers","title":"Write tutorial answers to file — write_answers","text":"Take tutorial session, extract submitted answers, write html file answers.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/write_answers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write tutorial answers to file — write_answers","text":"","code":"write_answers(file, session, is_test = FALSE)"},{"path":"https://ppbds.github.io/tutorial.helpers/reference/write_answers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write tutorial answers to file — write_answers","text":"file Location render answers . Output file type determined file suffix. \"html\" acceptable. session Session object Shiny learnr. is_test TRUE/FALSE depending whether just testing function. Default TRUE.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/write_answers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write tutorial answers to file — write_answers","text":"keep track questions/exercises student completed. obvious approach keep questions/exercises leave unanswered ones NA. sure approach better, even possible.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/reference/write_answers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write tutorial answers to file — write_answers","text":"","code":"if(interactive()){   write_answers(\"getting-started_answers.html\", sess) }"},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-development-version","dir":"Changelog","previous_headings":"","what":"tutorial.helpers (development version)","title":"tutorial.helpers (development version)","text":"Clean “Instructions Writing R Tutorials” vignette.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-030","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.3.0","title":"tutorial.helpers 0.3.0","text":"CRAN release: 2024-06-26 Add show_file(). Add process_submissions(). Remove ability save answers either RDS PDF files.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-027","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.7","title":"tutorial.helpers 0.2.7","text":"CRAN release: 2024-05-06 Get test cases format_tutorial() working . Fix format_tutorial() deal changes parsermd 0.1.3. Setting rmd_viewer_type “pane” within set_rstudio_settings(), per suggestion Jade Cao. Add “ID” field default information page. Change tutorial title “Getting Started Tutorials.” Give set_rstudio_settings() set.binary argument set TRUE default, causing function run set_binary_only_in_r_profile() end. handy “Getting Started Tutorials”” tutorial. Remove “Getting Started Tutorials” shinyapps.io.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-026","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.6","title":"tutorial.helpers 0.2.6","text":"CRAN release: 2024-01-16 Add determine_code_chunk_name() determine_exercise_number() functions make_exercise() manageable. Update logic determine_code_chunk_name() handle forward slashes ending dashes better. Add test case write_answers(). Add associated files .Rbuildignore violate CRAN size restriction 5 mb. Add vignette downloading answers. Reorder five vignettes Articles menu. Add Spanish translation Getting Started tutorial. Thanks @xavidp! Add several settings changes set_rstudio_settings(). set changes now quite extensive, seems best approach ensuring new students best possible learning environment. Rewrite set_rstudio_settings() report changes made settings.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-025","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.5","title":"tutorial.helpers 0.2.5","text":"CRAN release: 2023-05-21 Remove test case write_answers() meet 5 mb maximum package size.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-024","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.4","title":"tutorial.helpers 0.2.4","text":"Add test case write_answers(). Fix (really!) error CRAN Debian systems (caused attempts write user library) setting intermediates_dir argument tempdir() call render() within knit_tutorials().","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-023","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.3","title":"tutorial.helpers 0.2.3","text":"CRAN release: 2023-05-12 Fix error Debian systems caused attempts write user library. Thanks Kurt Hornik pointing problem. Create “Rstudio Addins” vignette. Create “Testing Package Tutorials” vignette. Create “Tutorials Books” vignette. Fix error downloading files exporting write_answers(). Thanks Xavier de Pedro Puente report.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-022","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.2","title":"tutorial.helpers 0.2.2","text":"CRAN release: 2023-05-08 Replace /dontrun{} (interactive()){}. Fix return value submission_server().","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-021","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.1","title":"tutorial.helpers 0.2.1","text":"Changes CRAN submission.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-020","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.2.0","title":"tutorial.helpers 0.2.0","text":"Add examples return values exported functions.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-012","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.1.2","title":"tutorial.helpers 0.1.2","text":"Move prep_rstudio_settings() r4ds.tutorials. Publish Getting Started tutorial Shiny Apps adjust _pkgdown.yml make use .","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-011","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.1.1","title":"tutorial.helpers 0.1.1","text":"Add prep_rstudio_settings(). Add Getting Started tutorial. Change copy_button use base R.","code":""},{"path":"https://ppbds.github.io/tutorial.helpers/news/index.html","id":"tutorialhelpers-010","dir":"Changelog","previous_headings":"","what":"tutorial.helpers 0.1.0","title":"tutorial.helpers 0.1.0","text":"Basic working version. Big code clean since spinning .primer.tutorials package. Revise test cases. Centralize answers creation write_answers(). Added NEWS.md file track changes package.","code":""}]
